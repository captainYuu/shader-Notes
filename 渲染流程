渲染分三个阶段 ： 应用阶段 几何阶段 光栅化阶段

GPU渲染流程 顶点数据 - 顶点着色器 - 曲面细分着色器 - 几何着色器 - 裁剪 - 屏幕映射—————
三角形设置 - 三角形遍历 - 片元着色器 - 逐片操作 ———— 屏幕图象

顶点着色器 完全可编程，通常用于实现顶点的空间变换、顶点着色等功能
曲面细分着色器 可选的着色器 用于细分图元
几何着色器 可选着色器 用于执行逐图元的着色操作 或者被用于产生更多的图元 
裁剪 剔除不再摄像机范围内的顶点
屏幕映射 不可配置和编程 把每个图元的坐标转换到屏幕坐标系中

三角形设置和三角形遍历都是固定函数 
片元着色器完全可编程 用于实现逐片元操作 
逐片元操作 修改颜色 深度缓冲 进行混合 等

渲染流水线概念上分三个阶段 ： 应用阶段（Application stage） - 集合阶段(Geometry Stage) - 光栅化阶段(Rasterizer Stage)，
应用阶段输出渲染图元给集合阶段 集合阶段输出 屏幕空间的顶点信息给光栅化阶段。
应用阶段主要3个任务 ： 1、准备好场景数据。如摄像机的位置、是椎体、场景中包含了那些模型 使用了哪些光源等 2、 粗粒度剔除（culling）以提高渲染性能 
3、设置好每个模型的渲染状态
几何阶段用于处理所有和我要绘制的几何相关的事情，如要绘制的图元是什么，怎么绘制他们，在哪里绘制，这一阶段通常在GPU上进行。
几何阶段负责和图元打交道，进行逐顶点、逐多边形的操作。这一阶段最重要的任务是把顶点坐标变换到屏幕坐标，再交给光栅器进行处理。
几何阶段通过对输入的渲染图元进行多步处理后这一阶段将会输出屏幕空间的二位顶点坐标、每个顶点对应的深度值、着色等相关的信息。
光栅化阶段在GPU上进行 主要任务是决定每个渲染图元中的哪些像素应该绘制在屏幕上。它需要对上一阶段得到的逐定点数据（如纹理坐标 定点颜色等）进行差值，
然后再进行逐像素处理。
